#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

if [ -f $ENV_DIR/PROJECT_PATH ]; then
	PROJECT_PATH=`cat $ENV_DIR/PROJECT_PATH`
	if [ -d $BUILD_DIR/$PROJECT_PATH ]; then
		echo "-----> Subdir buildpack in $PROJECT_PATH"
		echo "       creating cache: $CACHE_DIR"
		mkdir -p $CACHE_DIR
		TMP_DIR=`mktemp -d $CACHE_DIR/subdirXXXXX`
		echo "       created tmp dir: $TMP_DIR"
		echo "       moving working dir: $PROJECT_PATH to $TMP_DIR"
		cp -R $BUILD_DIR/$PROJECT_PATH/. $TMP_DIR/
		if [ -d $BUILD_DIR/$LIBRARY_PATH ]; then
			LIBRARY_PATH=`cat $ENV_DIR/LIBRARY_PATH`
			echo "-----> Subdir buildpack in $LIBRARY_PATH"
			LIBRARY_TMP_DIR=`mktemp -d $CACHE_DIR/libdirXXXXX`
			echo "       created tmp lib dir: $LIBRARY_TMP_DIR"
			echo "       moving lib working dir: $LIBRARY_PATH to $LIBRARY_TMP_DIR"
			cp -R $BUILD_DIR/$LIBRARY_PATH/ $LIBRARY_TMP_DIR/
		fi
	 	echo "       cleaning build dir $BUILD_DIR"
		rm -rf $BUILD_DIR/*
		echo "       copying preserved work dir from cache $TMP_DIR to build dir $BUILD_DIR"
		cp -R $TMP_DIR/. $BUILD_DIR/
		if [ -h $BUILD_DIR/libs ]; then
			echo "Removing libs symlink"
			rm -rf $BUILD_DIR/libs
		fi
		echo "       copying preserved lib work dir from cache $LIBRARY_TMP_DIR to build dir $BUILD_DIR"
		cp -R $LIBRARY_TMP_DIR/. $BUILD_DIR/
		echo "       cleaning tmp dir $TMP_DIR"
		rm -rf $TMP_DIR
		echo "       cleaning lib tmp dir $LIBRARY_TMP_DIR"
		rm -rf $LIBRARY_TMP_DIR
		exit 0
	fi
fi

echo "PROJECT_PATH is undefined"
exit 1


